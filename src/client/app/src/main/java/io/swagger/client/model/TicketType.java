/**
 * Simple TripApp API
 * This is a simple TripApp API
 * <p>
 * OpenAPI spec version: 1.0.0
 * <p>
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;

import com.google.gson.annotations.SerializedName;
import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.table.DatabaseTable;

import java.io.Serializable;

@DatabaseTable(tableName = "TicketType")
@ApiModel(description = "")
public class TicketType implements Serializable {

    @DatabaseField(id = true)
    @SerializedName("id")
    private Integer id = null;

    @DatabaseField
    @SerializedName("name")
    private String name = null;

    @DatabaseField
    @SerializedName("duration")
    private Integer duration = null;

    @DatabaseField
    @SerializedName("price")
    private Double price = null;


    public TicketType() {

    }

    /**
     **/
    @ApiModelProperty(value = "")
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    /**
     **/
    @ApiModelProperty(required = true, value = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /**
     * duration in minutes
     **/
    @ApiModelProperty(value = "duration in minutes")
    public Integer getDuration() {
        return duration;
    }

    public void setDuration(Integer duration) {
        this.duration = duration;
    }

    /**
     **/
    @ApiModelProperty(value = "")
    public Double getPrice() {
        return price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TicketType ticketType = (TicketType) o;
        return (this.id == null ? ticketType.id == null : this.id.equals(ticketType.id)) &&
                (this.name == null ? ticketType.name == null : this.name.equals(ticketType.name)) &&
                (this.duration == null ? ticketType.duration == null : this.duration.equals(ticketType.duration)) &&
                (this.price == null ? ticketType.price == null : this.price.equals(ticketType.price));
    }

    @Override
    public int hashCode() {
        int result = 17;
        result = 31 * result + (this.id == null ? 0 : this.id.hashCode());
        result = 31 * result + (this.name == null ? 0 : this.name.hashCode());
        result = 31 * result + (this.duration == null ? 0 : this.duration.hashCode());
        result = 31 * result + (this.price == null ? 0 : this.price.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TicketType {\n");

        sb.append("  id: ").append(id).append("\n");
        sb.append("  name: ").append(name).append("\n");
        sb.append("  duration: ").append(duration).append("\n");
        sb.append("  price: ").append(price).append("\n");
        sb.append("}\n");
        return sb.toString();
    }
}
