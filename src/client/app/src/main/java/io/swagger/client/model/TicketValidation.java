/**
 * Simple TripApp API
 * This is a simple TripApp API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.TicketType;
import io.swagger.client.model.User;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

import java.util.Date;

@ApiModel(description = "")
public class TicketValidation {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("validationDateTime")
  private Date validationDateTime = null;
  @SerializedName("isValid")
  private Boolean isValid = null;
  @SerializedName("ticket")
  private TicketPurchase ticket = null;
  @SerializedName("controller")
  private User controller = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Date getValidationDateTime() {
    return validationDateTime;
  }
  public void setValidationDateTime(Date validationDateTime) {
    this.validationDateTime = validationDateTime;
  }

  /**
   * Is ticket valid?
   **/
  @ApiModelProperty(required = true, value = "Is ticket valid?")
  public Boolean getIsValid() {
    return isValid;
  }
  public void setIsValid(Boolean isValid) {
    this.isValid = isValid;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public TicketPurchase getTicket() {
    return ticket;
  }
  public void setTicket(TicketPurchase ticket) {
    this.ticket = ticket;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public User getController() {
    return controller;
  }
  public void setController(User controller) {
    this.controller = controller;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TicketValidation ticketValidation = (TicketValidation) o;
    return (this.id == null ? ticketValidation.id == null : this.id.equals(ticketValidation.id)) &&
        (this.validationDateTime == null ? ticketValidation.validationDateTime == null : this.validationDateTime.equals(ticketValidation.validationDateTime)) &&
        (this.isValid == null ? ticketValidation.isValid == null : this.isValid.equals(ticketValidation.isValid)) &&
        (this.ticket == null ? ticketValidation.ticket == null : this.ticket.equals(ticketValidation.ticket)) &&
        (this.controller == null ? ticketValidation.controller == null : this.controller.equals(ticketValidation.controller));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.validationDateTime == null ? 0: this.validationDateTime.hashCode());
    result = 31 * result + (this.isValid == null ? 0: this.isValid.hashCode());
    result = 31 * result + (this.ticket == null ? 0: this.ticket.hashCode());
    result = 31 * result + (this.controller == null ? 0: this.controller.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TicketValidation {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  validationDateTime: ").append(validationDateTime).append("\n");
    sb.append("  isValid: ").append(isValid).append("\n");
    sb.append("  ticket: ").append(ticket).append("\n");
    sb.append("  controller: ").append(controller).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
